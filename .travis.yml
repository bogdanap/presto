language: java

env:
  global:
    - MAVEN_OPTS="-Xmx512M -XX:+ExitOnOutOfMemoryError"
    - MAVEN_SKIP_CHECKS_AND_DOCS="-Dair.check.skip-all=true -Dmaven.javadoc.skip=true"
    - MAVEN_FAST_INSTALL="-DskipTests $MAVEN_SKIP_CHECKS_AND_DOCS -B -q -T C1"
    - ARTIFACTS_UPLOAD_PATH_BRANCH=travis_build_artifacts/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}
    - ARTIFACTS_UPLOAD_PATH_PR=travis_build_artifacts_pr/${TRAVIS_REPO_SLUG}/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}
    - TEST_FLAGS=""
  matrix:
    - MAVEN_CHECKS=true
    - TEST_SPECIFIC_MODULES=presto-tests
    - TEST_SPECIFIC_MODULES=presto-tests TEST_FLAGS="-P ci-only"
    - TEST_SPECIFIC_MODULES=presto-raptor
    - TEST_SPECIFIC_MODULES=presto-accumulo
    - TEST_SPECIFIC_MODULES=presto-cassandra
    - TEST_SPECIFIC_MODULES=presto-hive
    - TEST_OTHER_MODULES=!presto-tests,!presto-raptor,!presto-accumulo,!presto-cassandra,!presto-hive,!presto-docs,!presto-server,!presto-server-rpm
    - PRODUCT_TESTS_BASIC_ENVIRONMENT=true
    - PRODUCT_TESTS_SPECIFIC_ENVIRONMENT=true
    - HIVE_TESTS=true

sudo: required
dist: trusty
group: deprecated-2017Q3
addons:
  apt:
    packages:
      - oracle-java8-installer

cache:
  directories:
    - $HOME/.m2/repository

services:
  - docker

install:
  - unset _JAVA_OPTIONS
  - ./mvnw -v
  - |
    if [[ -v TEST_SPECIFIC_MODULES ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl $TEST_SPECIFIC_MODULES -am
    fi
  - |
    if [[ -v TEST_OTHER_MODULES ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server,!presto-server-rpm'
    fi
  - |
    if [[ -v PRODUCT_TESTS_BASIC_ENVIRONMENT || -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl '!presto-docs,!presto-server-rpm'
    fi
  - |
    if [[ -v HIVE_TESTS ]]; then
      ./mvnw install $MAVEN_FAST_INSTALL -pl presto-hive-hadoop2 -am
    fi

before_script:
  - |
    export ARTIFACTS_UPLOAD_PATH=${ARTIFACTS_UPLOAD_PATH_BRANCH}
    if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
      export ARTIFACTS_UPLOAD_PATH=${ARTIFACTS_UPLOAD_PATH_PR}
    fi

script:
  - |
    if [[ -v MAVEN_CHECKS ]]; then
      ./mvnw install -DskipTests -B -T C1
    fi
  - |
    if [[ -v TEST_SPECIFIC_MODULES ]]; then
      ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl $TEST_SPECIFIC_MODULES $TEST_FLAGS
    fi
  - |
    if [[ -v TEST_OTHER_MODULES ]]; then
      ./mvnw test $MAVEN_SKIP_CHECKS_AND_DOCS -B -pl $TEST_OTHER_MODULES
    fi
  - |
    if [[ -v PRODUCT_TESTS_BASIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        multinode -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-kerberos-hdfs-impersonation -g storage_formats,cli,hdfs_impersonation,authorization
    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        singlenode-ldap -g ldap -x simba_jdbc
    fi
# SQL server image sporadically hangs during the startup
# TODO: Uncomment it once issue is fixed
# https://github.com/Microsoft/mssql-docker/issues/76
#  - |
#    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
#      presto-product-tests/bin/run_on_docker.sh \
#        singlenode-sqlserver -g sqlserver
#    fi
  - |
    if [[ -v PRODUCT_TESTS_SPECIFIC_ENVIRONMENT ]]; then
      presto-product-tests/bin/run_on_docker.sh \
        multinode-tls -g smoke,cli,group-by,join,tls
    fi
  - |
    if [[ -v HIVE_TESTS ]]; then
      presto-hive-hadoop2/bin/run_on_docker.sh
    fi



